--- 
- hosts: "{{ slave }}"
  tasks:
  - name: Check if postgresql is primary on host "{{ slave }}" and the failover worked
    shell: '/usr/bin/repmgr node check -f /etc/repmgr/10/repmgr.conf --nagios --role'
    become: true
    become_user: postgres
    register: slave_check
  
  - debug:
      msg: The playbook stops now because the slave is the new master see "{{ slave_check.stdout }}" and pgpool has to deactivate the backend node to prevent a split brain.
    when: slave_check.stdout | join('') | search('standby')

  - meta: end_play
    when: slave_check.stdout | join('') | search('standby')


- hosts: pgpool
  tasks:
  - meta: end_play
    when: slave_check.stdout | join('') | search('standby')
  
  - name: Check all port numbers are accessible from current host
    wait_for:
     host: "{{ master }}"
     port: 5432
     state: started         # Port should be open
     delay: 0               # No wait before first check (sec)
     timeout: 3             # Stop checking after timeout (sec)
    ignore_errors: yes
    register: portcheck

  - debug:
      msg: "{{ portcheck.state }}"

  - name: Activate backend node on host "{{ inventory_hostname }}"
    shell: 'pcp_attach_node -h localhost -U pgpool -w -n {{ backend_node }}'
    register: cmd
    failed_when: cmd.rc != 0 or cmd.stdout != "pcp_attach_node -- Command Successful"
    when: protcheck.state = "started"
    tags:
      - activate

