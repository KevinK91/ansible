---
- shell: dpkg-query -W 'icinga2'
  ignore_errors: True
  register: is_statd
  when: ansible_distribution == "Ubuntu"

- name: Add an Apt signing key Icinga2
  apt_key:
    url: https://packages.icinga.com/icinga.key
    state: present
  when: is_statd|failed
  become: yes

- name: Add Icinga2 repository Ubuntu
  apt_repository:
     repo: deb http://packages.icinga.com/ubuntu icinga-xenial main
     state: present
     filename: 'icinga2'
  when: and is_statd|failed
  become: yes

- name: Install icinga2 with nagios plugins Ubuntu xenial
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items: "{{ icinga2_client_packages_ubuntu }}"
  become: yes
  when: is_statd|failed


- name: Enable api feature
  command: icinga2 feature enable api
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"    
  become: yes

- name: Deploy default Linux check which are not in the repository
  import_tasks: deploy-plugins.yml

- name: Create pki directory for Icinga2
  file:
    path: /etc/icinga2/pki
    owner: nagios
    group: nagios
    state: directory
    mode: 0750
  become: yes
  tags:
    - icinga2-client-certificate

- name: Create client certificate
  command: >
    icinga2 pki new-cert --cn "{{ inventory_hostname }}" \
      --cert "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.crt" \
      --csr "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.csr" \
      --key "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.key"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"    
  become: yes  
  tags:
    - icinga2-client-certificate
  
- name: Request the master certificate
  command: >
    icinga2 pki save-cert \
      --host "{{ icinga2_master_fqdn }}" \
      --port "{{ icinga2_ca_port }}" \
      --key "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.key" \
      --trustedcert "{{ icinga2_ssl_dir }}/trusted-master.crt"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  become: yes  
  tags:
    - icinga2-client-certificate

# If the current node is the same as icinga2_master_fqdn maybe copy instead of request - or request from localhost?
- name: Get ticket from master
  command: icinga2 pki ticket --cn {{ inventory_hostname }}
  delegate_to: "{{ icinga2_master_fqdn }}"
  register: icinga2_ca_ticket
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  become: yes
  tags:
    - icinga2-ticket-request

# If the current node is the same as icinga2_master_fqdn maybe copy instead of request - or request from localhost?
- name: Get ticket from master
  command: >
    icinga2 pki request \
      --host "{{ icinga2_master_fqdn }}" \
      --port "{{ icinga2_ca_port }}" \
      --ticket "{{ icinga2_ca_ticket.stdout}}" \
      --key "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.key" \
      --cert "{{ icinga2_ssl_dir }}/{{ inventory_hostname }}.crt" \
      --trustedcert "{{ icinga2_ssl_dir }}/trusted-master.crt" \
      --ca "{{ icinga2_ssl_dir }}/ca.crt"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"    
  become: yes  
  tags:
    - icinga2-ticket-request

- name: Deploy icinga2.conf file
  copy:
    src: files/icinga2.conf
    dest: "{{ icinga2_sysconf_dir }}/icinga2.conf"
    owner: nagios
    group: nagios
    mode: u=rw,g=r,o=r

- name: Deploy zones.conf file
  template:
    src: templates/zones.conf.j2
    dest: "{{ icinga2_sysconf_dir }}/zones.conf"
    owner: nagios
    group: nagios
    mode: "u=rw,g=r,o=r"

- name: Deploy api.conf file
  template:
    src: templates/api.conf.j2
    dest: "{{ icinga2_sysconf_dir }}/features-available/api.conf"
    owner: nagios
    group: nagios
    mode: "u=rw,g=r,o=r"


- name: restart icinga2 to activate the client
  systemd:
    name: icinga2
    state: restarted
  become: yes

